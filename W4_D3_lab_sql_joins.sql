# Write SQL queries to perform the following tasks using the Sakila database:

# 1. List the number of films per category
SELECT name, COUNT(*) 
FROM category as c 
LEFT JOIN film_category 
USING (category_id) 
LEFT JOIN film
USING (film_id) 
GROUP BY name;


# 2. Retrieve the store ID, city, and country for each store
#Join store, address, city, country 
SELECT s.store_id, ci.city, co.country
FROM store as s
LEFT JOIN address AS a 
USING (address_id) 
LEFT JOIN city AS ci
USING (city_id) 
LEFT JOIN country AS co
USING (country_id);


# 3. Calculate the total revenue generated by each store in dollars
#STORE, CUSTOMER, PAYMENT 
SELECT s.store_id, SUM(p.amount) AS total_revenue
FROM store AS s
LEFT JOIN customer AS c 
USING (store_id) 
LEFT JOIN payment AS p 
USING (customer_id)
GROUP BY s.store_id;


# 4. Determine the average running time of films for each category
SELECT c.name, round(AVG(f.length), 0) AS avg_run_time
FROM category AS c 
LEFT JOIN film_category AS fc
USING (category_id) 
LEFT JOIN film AS f 
USING (film_id) 
GROUP BY c.name;

# BONUS 
# 5. Identify the film categories with the longest average running time
# 6. Display the top 10 most frequently rented movies in descending order
# 7. Determine if "Academy Dinosaur" can be rented from Store 1
# 8. Provide a list of all distinct film titles, along with their availability status in the inventory. Include a column indicating whether each title is 'Available' or 'NOT available.' Note that there are 42 titles that are not in the inventory, and this information can be obtained using a CASE statement combined with IFNULL."